{
  "name": "oj-treemap-node",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Treemap Node",
  "type": "core",
  "description": "ojTreemapNode",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojTreemapNode.html",
  "properties": {
    "categories": {
      "description": "An optional array of category strings corresponding to this data item. This enables highlighting and filtering of individual data items through interactions with the legend and other visualization elements. The categories array of each node is required to be a superset of the categories array of its parent node. If not specified, the ids of the node and its ancestors will be used.",
      "type": "Array<string>",
      "displayName": "Categories",
      "value": [],
      "help": "categories"
    },
    "color": {
      "description": "The fill color of the node.",
      "type": "string",
      "displayName": "Color",
      "value": "#000000",
      "format": "color",
      "help": "color"
    },
    "drilling": {
      "description": "Specifies whether drilling is enabled for the node. Drillable nodes will show a pointer cursor on hover and fire an ojDrill event on click (double click if selection is enabled). To enable drilling for all nodes at once, use the drilling attribute in the top level.",
      "type": "string",
      "displayName": "Drilling",
      "value": "inherit",
      "help": "drilling",
      "enumValues": [
        "inherit",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "inherit": {
          "displayName": "Inherit"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "groupLabelDisplay": {
      "description": "The label display behavior for group nodes.",
      "type": "string",
      "displayName": "Group Label Display",
      "value": "header",
      "help": "groupLabelDisplay",
      "enumValues": [
        "header",
        "node",
        "off"
      ],
      "propertyEditorValues": {
        "header": {
          "displayName": "Header"
        },
        "node": {
          "displayName": "Node"
        },
        "off": {
          "displayName": "Off"
        }
      }
    },
    "header": {
      "description": "An object defining the properties for the node header.",
      "type": "object",
      "displayName": "Header",
      "help": "header",
      "properties": {
        "isolate": {
          "description": "Specifies whether isolate behavior is enabled on the node.",
          "type": "string",
          "displayName": "Isolate",
          "value": "on",
          "help": "header.isolate",
          "enumValues": [
            "off",
            "on"
          ],
          "propertyEditorValues": {
            "off": {
              "displayName": "Off"
            },
            "on": {
              "displayName": "On"
            }
          }
        },
        "labelHalign": {
          "description": "The horizontal alignment of the header title.",
          "type": "string",
          "displayName": "Label Halign",
          "value": "start",
          "help": "header.labelHalign",
          "enumValues": [
            "center",
            "end",
            "start"
          ],
          "propertyEditorValues": {
            "center": {
              "displayName": "Center"
            },
            "end": {
              "displayName": "End"
            },
            "start": {
              "displayName": "Start"
            }
          }
        },
        "labelStyle": {
          "description": "The CSS style object defining the style of the header title.",
          "type": "object",
          "displayName": "Label Style",
          "value": {},
          "help": "header.labelStyle"
        },
        "useNodeColor": {
          "description": "Specifies whether the node color should be displayed in the header.",
          "type": "string",
          "displayName": "Use Node Color",
          "value": "off",
          "help": "header.useNodeColor",
          "enumValues": [
            "off",
            "on"
          ],
          "propertyEditorValues": {
            "off": {
              "displayName": "Off"
            },
            "on": {
              "displayName": "On"
            }
          }
        }
      }
    },
    "label": {
      "description": "The label for this node.",
      "type": "string",
      "displayName": "Label",
      "value": "",
      "help": "label"
    },
    "labelDisplay": {
      "description": "The label display behavior for leaf nodes.",
      "type": "string",
      "displayName": "Label Display",
      "value": "node",
      "help": "labelDisplay",
      "enumValues": [
        "node",
        "off"
      ],
      "propertyEditorValues": {
        "node": {
          "displayName": "Node"
        },
        "off": {
          "displayName": "Off"
        }
      }
    },
    "labelHalign": {
      "description": "The horizontal alignment for labels displayed within the node.",
      "type": "string",
      "displayName": "Label Halign",
      "value": "center",
      "help": "labelHalign",
      "enumValues": [
        "center",
        "end",
        "start"
      ],
      "propertyEditorValues": {
        "center": {
          "displayName": "Center"
        },
        "end": {
          "displayName": "End"
        },
        "start": {
          "displayName": "Start"
        }
      }
    },
    "labelStyle": {
      "description": "The CSS style object defining the style of the label. The CSS white-space property can be defined with value \"nowrap\" to disable default text wrapping.",
      "type": "object",
      "displayName": "Label Style",
      "value": {},
      "help": "labelStyle"
    },
    "labelValign": {
      "description": "The vertical alignment for labels displayed within the node.",
      "type": "string",
      "displayName": "Label Valign",
      "value": "center",
      "help": "labelValign",
      "enumValues": [
        "bottom",
        "center",
        "top"
      ],
      "propertyEditorValues": {
        "bottom": {
          "displayName": "Bottom"
        },
        "center": {
          "displayName": "Center"
        },
        "top": {
          "displayName": "Top"
        }
      }
    },
    "pattern": {
      "description": "The pattern used to fill the node.",
      "type": "string",
      "displayName": "Pattern",
      "value": "none",
      "help": "pattern",
      "enumValues": [
        "largeChecker",
        "largeCrosshatch",
        "largeDiagonalLeft",
        "largeDiagonalRight",
        "largeDiamond",
        "largeTriangle",
        "none",
        "smallChecker",
        "smallCrosshatch",
        "smallDiagonalLeft",
        "smallDiagonalRight",
        "smallDiamond",
        "smallTriangle"
      ],
      "propertyEditorValues": {
        "largeChecker": {
          "displayName": "Large Checker"
        },
        "largeCrosshatch": {
          "displayName": "Large Crosshatch"
        },
        "largeDiagonalLeft": {
          "displayName": "Large Diagonal Left"
        },
        "largeDiagonalRight": {
          "displayName": "Large Diagonal Right"
        },
        "largeDiamond": {
          "displayName": "Large Diamond"
        },
        "largeTriangle": {
          "displayName": "Large Triangle"
        },
        "none": {
          "displayName": "None"
        },
        "smallChecker": {
          "displayName": "Small Checker"
        },
        "smallCrosshatch": {
          "displayName": "Small Crosshatch"
        },
        "smallDiagonalLeft": {
          "displayName": "Small Diagonal Left"
        },
        "smallDiagonalRight": {
          "displayName": "Small Diagonal Right"
        },
        "smallDiamond": {
          "displayName": "Small Diamond"
        },
        "smallTriangle": {
          "displayName": "Small Triangle"
        }
      }
    },
    "selectable": {
      "description": "Specifies whether or not the node will be selectable.",
      "type": "string",
      "displayName": "Selectable",
      "value": "auto",
      "help": "selectable",
      "enumValues": [
        "auto",
        "off"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "off": {
          "displayName": "Off"
        }
      }
    },
    "shortDesc": {
      "description": "The description of this node. This is used for accessibility and also for customizing the tooltip text.",
      "type": "string",
      "displayName": "Short Desc",
      "value": "",
      "help": "shortDesc"
    },
    "svgClassName": {
      "description": "The CSS style class to apply to the node. The style class and inline style will override any other styling specified through the properties. For tooltip interactivity, it's recommended to also pass a representative color to the node color attribute.",
      "type": "string",
      "displayName": "Svg Class Name",
      "value": "",
      "help": "svgClassName"
    },
    "svgStyle": {
      "description": "The inline style to apply to the node. The style class and inline style will override any other styling specified through the properties. For tooltip interactivity, it's recommended to also pass a representative color to the node color attribute.",
      "type": "object",
      "displayName": "Svg Style",
      "value": {},
      "help": "svgStyle"
    },
    "value": {
      "description": "The value of the node. The value determines the relative size of the node.",
      "type": "number",
      "displayName": "Value",
      "help": "value"
    }
  }
}