{
  "name": "oj-chart-series",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Chart Series",
  "type": "core",
  "description": "ojChartSeries",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojChartSeries.html",
  "properties": {
    "areaColor": {
      "description": "The area color of the series. Only applies if series type is area or lineWithArea.",
      "type": "string",
      "displayName": "Area Color",
      "format": "color",
      "help": "areaColor"
    },
    "areaSvgClassName": {
      "description": "The CSS style class to apply if series type is area or lineWithArea. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the color attribute.",
      "type": "string",
      "displayName": "Area Svg Class Name",
      "help": "areaSvgClassName"
    },
    "areaSvgStyle": {
      "description": "The inline style to apply if series type is area or lineWithArea. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the color attribute.",
      "type": "object",
      "displayName": "Area Svg Style",
      "help": "areaSvgStyle"
    },
    "assignedToY2": {
      "description": "Defines whether the series is associated with the y2 axis. Only applies to Cartesian bar, line, area, and combo charts.",
      "type": "string",
      "displayName": "Assigned To Y2",
      "value": "off",
      "help": "assignedToY2",
      "enumValues": [
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "borderColor": {
      "description": "The border color of the series.",
      "type": "string",
      "displayName": "Border Color",
      "format": "color",
      "help": "borderColor"
    },
    "borderWidth": {
      "description": "The border width of the series.",
      "type": "number",
      "displayName": "Border Width",
      "units": "pixels",
      "help": "borderWidth"
    },
    "boxPlot": {
      "description": "An object containing the style properties of the box plot series.",
      "type": "object",
      "displayName": "Box Plot",
      "help": "boxPlot",
      "properties": {
        "medianSvgClassName": {
          "description": "The CSS style class to apply to the median line.",
          "type": "string",
          "displayName": "Median Svg Class Name",
          "help": "boxPlot.medianSvgClassName"
        },
        "medianSvgStyle": {
          "description": "The CSS inline style to apply to the median line.",
          "type": "object",
          "displayName": "Median Svg Style",
          "help": "boxPlot.medianSvgStyle"
        },
        "q2Color": {
          "description": "The color of the Q2 segment of the box.",
          "type": "string",
          "displayName": "Q2 Color",
          "format": "color",
          "help": "boxPlot.q2Color"
        },
        "q2SvgClassName": {
          "description": "The CSS style class to apply to the Q2 segment of the box. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the q2Color attribute.",
          "type": "string",
          "displayName": "Q2 Svg Class Name",
          "help": "boxPlot.q2SvgClassName"
        },
        "q2SvgStyle": {
          "description": "The CSS inline style to apply to the Q2 segment of the box. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the q2Color attribute.",
          "type": "object",
          "displayName": "Q2 Svg Style",
          "help": "boxPlot.q2SvgStyle"
        },
        "q3Color": {
          "description": "The color of the Q3 segment of the box.",
          "type": "string",
          "displayName": "Q3 Color",
          "format": "color",
          "help": "boxPlot.q3Color"
        },
        "q3SvgClassName": {
          "description": "The CSS style class to apply to the Q3 segment of the box. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the q3Color attribute.",
          "type": "string",
          "displayName": "Q3 Svg Class Name",
          "help": "boxPlot.q3SvgClassName"
        },
        "q3SvgStyle": {
          "description": "The CSS inline style to apply to the Q3 segment of the box. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the q3Color attribute.",
          "type": "object",
          "displayName": "Q3 Svg Style",
          "help": "boxPlot.q3SvgStyle"
        },
        "whiskerEndLength": {
          "description": "Specifies the length of the whisker ends in pixels (e.g. '9px') or as a percentage of the box width (e.g. '50%').",
          "type": "string",
          "displayName": "Whisker End Length",
          "help": "boxPlot.whiskerEndLength"
        },
        "whiskerEndSvgClassName": {
          "description": "The CSS style class to apply to the whisker ends.",
          "type": "string",
          "displayName": "Whisker End Svg Class Name",
          "help": "boxPlot.whiskerEndSvgClassName"
        },
        "whiskerEndSvgStyle": {
          "description": "The CSS inline style to apply to the whisker ends.",
          "type": "object",
          "displayName": "Whisker End Svg Style",
          "help": "boxPlot.whiskerEndSvgStyle"
        },
        "whiskerSvgClassName": {
          "description": "The CSS style class to apply to the whisker stems.",
          "type": "string",
          "displayName": "Whisker Svg Class Name",
          "help": "boxPlot.whiskerSvgClassName"
        },
        "whiskerSvgStyle": {
          "description": "The CSS inline style to apply to the whisker stems.",
          "type": "object",
          "displayName": "Whisker Svg Style",
          "help": "boxPlot.whiskerSvgStyle"
        }
      }
    },
    "categories": {
      "description": "An optional array of category strings corresponding to this series. This allows highlighting and filtering of a series through interactions with legend sections. If not defined, the series id is used.",
      "type": "Array<string>",
      "displayName": "Categories",
      "help": "categories"
    },
    "color": {
      "description": "The color of the series.",
      "type": "string",
      "displayName": "Color",
      "format": "color",
      "help": "color"
    },
    "displayInLegend": {
      "description": "Defines whether the series should be shown in the legend. When set to 'auto', the series will not be displayed in the legend if it has null data or if it is a stock, funnel, or pyramid series.",
      "type": "string",
      "displayName": "Display In Legend",
      "value": "auto",
      "help": "displayInLegend",
      "enumValues": [
        "auto",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "drilling": {
      "description": "Whether drilling is enabled on the series item. Drillable objects will show a pointer cursor on hover and fire an ojDrill event on click. To enable drilling for all series items at once, use the drilling attribute in the top level.",
      "type": "string",
      "displayName": "Drilling",
      "value": "inherit",
      "help": "drilling",
      "enumValues": [
        "inherit",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "inherit": {
          "displayName": "Inherit"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "lineStyle": {
      "description": "The line style of the data line. Only applies to line, lineWithArea, scatter, and bubble series.",
      "type": "string",
      "displayName": "Line Style",
      "value": "solid",
      "help": "lineStyle",
      "enumValues": [
        "dashed",
        "dotted",
        "solid"
      ],
      "propertyEditorValues": {
        "dashed": {
          "displayName": "Dashed"
        },
        "dotted": {
          "displayName": "Dotted"
        },
        "solid": {
          "displayName": "Solid"
        }
      }
    },
    "lineType": {
      "description": "The line type of the data line or area. Only applies to line, area, scatter, and bubble series. centeredStepped and centeredSegmented are not supported for polar, scatter, and bubble charts.",
      "type": "string",
      "displayName": "Line Type",
      "value": "auto",
      "help": "lineType",
      "enumValues": [
        "auto",
        "centeredSegmented",
        "centeredStepped",
        "curved",
        "none",
        "segmented",
        "stepped",
        "straight"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "centeredSegmented": {
          "displayName": "Centered Segmented"
        },
        "centeredStepped": {
          "displayName": "Centered Stepped"
        },
        "curved": {
          "displayName": "Curved"
        },
        "none": {
          "displayName": "None"
        },
        "segmented": {
          "displayName": "Segmented"
        },
        "stepped": {
          "displayName": "Stepped"
        },
        "straight": {
          "displayName": "Straight"
        }
      }
    },
    "lineWidth": {
      "description": "The width of the data line. Only applies to line, lineWithArea, scatter, and bubble series.",
      "type": "number",
      "displayName": "Line Width",
      "minimum": 0,
      "units": "pixels",
      "help": "lineWidth"
    },
    "markerColor": {
      "description": "The color of the data markers, if different from the series color.",
      "type": "string",
      "displayName": "Marker Color",
      "format": "color",
      "help": "markerColor"
    },
    "markerDisplayed": {
      "description": "Defines whether the data markers should be displayed. Only applies to line, area, scatter, and bubble series. If auto, the markers will be displayed whenever the data points are not connected by a line.",
      "type": "string",
      "displayName": "Marker Displayed",
      "value": "auto",
      "help": "markerDisplayed",
      "enumValues": [
        "auto",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "markerShape": {
      "description": "The shape of the data markers. In addition to the built-in shapes, it may also take SVG path commands to specify a custom shape. The chart will style the custom shapes the same way as built-in shapes, supporting properties like color and borderColor and applying hover and selection effects. Only 'auto' is supported for range series.",
      "type": "\"circle\"|\"diamond\"|\"human\"|\"plus\"|\"square\"|\"star\"|\"triangleDown\"|\"triangleUp\"|\"auto\"|string",
      "displayName": "Marker Shape",
      "value": "auto",
      "help": "markerShape"
    },
    "markerSize": {
      "description": "The size of the data markers.",
      "type": "number",
      "displayName": "Marker Size",
      "units": "pixels",
      "help": "markerSize"
    },
    "markerSvgClassName": {
      "description": "The CSS style class to apply to the data markers.The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the marker color attribute.",
      "type": "string",
      "displayName": "Marker Svg Class Name",
      "help": "markerSvgClassName"
    },
    "markerSvgStyle": {
      "description": "The inline style to apply to the data markers. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the marker color attribute.",
      "type": "object",
      "displayName": "Marker Svg Style",
      "help": "markerSvgStyle"
    },
    "name": {
      "description": "The name of the series, displayed in the legend and tooltips.",
      "type": "string",
      "displayName": "Name",
      "help": "name"
    },
    "pattern": {
      "description": "The pattern used to fill the series. A solid fill is used by default, unless the seriesEffect is 'pattern'.",
      "type": "string",
      "displayName": "Pattern",
      "value": "auto",
      "help": "pattern",
      "enumValues": [
        "auto",
        "largeChecker",
        "largeCrosshatch",
        "largeDiagonalLeft",
        "largeDiagonalRight",
        "largeDiamond",
        "largeTriangle",
        "smallChecker",
        "smallCrosshatch",
        "smallDiagonalLeft",
        "smallDiagonalRight",
        "smallDiamond",
        "smallTriangle"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "largeChecker": {
          "displayName": "Large Checker"
        },
        "largeCrosshatch": {
          "displayName": "Large Crosshatch"
        },
        "largeDiagonalLeft": {
          "displayName": "Large Diagonal Left"
        },
        "largeDiagonalRight": {
          "displayName": "Large Diagonal Right"
        },
        "largeDiamond": {
          "displayName": "Large Diamond"
        },
        "largeTriangle": {
          "displayName": "Large Triangle"
        },
        "smallChecker": {
          "displayName": "Small Checker"
        },
        "smallCrosshatch": {
          "displayName": "Small Crosshatch"
        },
        "smallDiagonalLeft": {
          "displayName": "Small Diagonal Left"
        },
        "smallDiagonalRight": {
          "displayName": "Small Diagonal Right"
        },
        "smallDiamond": {
          "displayName": "Small Diamond"
        },
        "smallTriangle": {
          "displayName": "Small Triangle"
        }
      }
    },
    "pieSliceExplode": {
      "description": "A number from 0 to 1 indicating the amount to explode the pie slice. Only applies to pie charts.",
      "type": "number",
      "displayName": "Pie Slice Explode",
      "value": 0,
      "maximum": 1,
      "minimum": 0,
      "help": "pieSliceExplode"
    },
    "shortDesc": {
      "description": "The description of this series. This is used for accessibility and for customizing the tooltip text on the corressponding legend item for the series.",
      "type": "string",
      "displayName": "Short Desc",
      "translatable": true,
      "help": "shortDesc"
    },
    "source": {
      "description": "The URI of the custom image. If specified, it takes precedence over shape.",
      "type": "string",
      "displayName": "Source",
      "help": "source"
    },
    "sourceHover": {
      "description": "The optional URI for the hover state. If not specified, the source image will be used.",
      "type": "string",
      "displayName": "Source Hover",
      "help": "sourceHover"
    },
    "sourceHoverSelected": {
      "description": "The optional URI for the hover selected state. If not specified, the source image will be used.",
      "type": "string",
      "displayName": "Source Hover Selected",
      "help": "sourceHoverSelected"
    },
    "sourceSelected": {
      "description": "The optional URI for the selected state. If not specified, the source image will be used.",
      "type": "string",
      "displayName": "Source Selected",
      "help": "sourceSelected"
    },
    "stackCategory": {
      "description": "In stacked charts, groups series together for stacking. All series without a stackCategory will be assigned to the same stack.",
      "type": "string",
      "displayName": "Stack Category",
      "help": "stackCategory"
    },
    "svgClassName": {
      "description": "The CSS style class to apply to the series. For series of type lineWithArea, this style will only be applied to the line if areaClassName is also specified. The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the color attribute.",
      "type": "string",
      "displayName": "Svg Class Name",
      "help": "svgClassName"
    },
    "svgStyle": {
      "description": "The inline style to apply to the series. For series of type lineWithArea, this style will only be applied to the line if areaStyle is also specified.The style class and inline style will override any other styling specified through the properties. For tooltips and hover interactivity, it's recommended to also pass a representative color to the color attribute.",
      "type": "object",
      "displayName": "Svg Style",
      "help": "svgStyle"
    },
    "type": {
      "description": "The type of data objects to display for this series. Only applies to bar, line, area, stock, box plot, and combo charts.",
      "type": "string",
      "displayName": "Type",
      "value": "auto",
      "help": "type",
      "enumValues": [
        "area",
        "auto",
        "bar",
        "boxPlot",
        "candlestick",
        "line",
        "lineWithArea"
      ],
      "propertyEditorValues": {
        "area": {
          "displayName": "Area"
        },
        "auto": {
          "displayName": "Auto"
        },
        "bar": {
          "displayName": "Bar"
        },
        "boxPlot": {
          "displayName": "Box Plot"
        },
        "candlestick": {
          "displayName": "Candlestick"
        },
        "line": {
          "displayName": "Line"
        },
        "lineWithArea": {
          "displayName": "Line With Area"
        }
      }
    }
  }
}