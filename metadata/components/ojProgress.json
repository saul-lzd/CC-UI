{
  "name": "oj-progress",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Progress",
  "type": "core",
  "styleClasses": [
    {
      "styleGroup": [
        "oj-progress-bar-embedded"
      ],
      "description": "Optional class that can be set on a oj-progress bar element to style an embedded progress bar within a web application or dialog."
    },
    {
      "styleGroup": [
        "oj-progress-bar-start-label"
      ],
      "description": "Optional class that can be set on a div after the oj-progress element. This div contains the start text to display underneath the oj-progress bar."
    },
    {
      "styleGroup": [
        "oj-progress-bar-end-label"
      ],
      "description": "Optional class that can be set on a div after the oj-progress element. This div contains the end text to display underneath the oj-progress bar."
    }
  ],
  "description": "Displays progress of an operation in a rectangular horizontal meter or in a circular meter.",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojProgress.html",
  "properties": {
    "max": {
      "description": "The maximum allowed value.",
      "type": "number",
      "displayName": "Max",
      "value": 100,
      "minimum": 0,
      "help": "max"
    },
    "translations": {
      "description": "A collection of translated resources from the translation bundle, or null if this component has no resources.",
      "type": "object|null",
      "displayName": "Translations",
      "value": {},
      "translatable": true,
      "help": "translations",
      "properties": {
        "ariaIndeterminateProgressText": {
          "description": "Accessible text read by a screen reader while an indeterminate oj-progress is in progress.\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Aria Indeterminate Progress Text",
          "help": "translations.ariaIndeterminateProgressText"
        }
      }
    },
    "type": {
      "description": "The shape of the Progress.",
      "type": "string",
      "displayName": "Type",
      "value": "bar",
      "help": "type",
      "enumValues": [
        "bar",
        "circle"
      ],
      "propertyEditorValues": {
        "bar": {
          "description": "displays progress in a rectangular horizontal meter",
          "displayName": "Bar"
        },
        "circle": {
          "description": "displays progress in a circular meter",
          "displayName": "Circle"
        }
      }
    },
    "value": {
      "description": "The value of the Progress.",
      "type": "number",
      "displayName": "Value",
      "value": 0,
      "writeback": true,
      "minimum": -1,
      "help": "value"
    }
  },
  "methods": {
    "refresh": {
      "description": "Refreshes the component.",
      "help": "refresh",
      "return": "void"
    },
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a [property]Changed event.",
      "help": "setProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "any"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "help": "getProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "any"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "help": "setProperties",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "object"
        }
      ],
      "return": "void"
    }
  },
  "slots": {
    "contextMenu": {
      "description": "The contextMenu slot is set on the <oj-menu> instance within this element. It designates the JET Menu that this component should launch as a context menu.",
      "maxItems": 1,
      "help": "contextMenu"
    }
  }
}