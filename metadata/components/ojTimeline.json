{
  "name": "oj-timeline",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Timeline",
  "type": "core",
  "description": "An interactive data visualization that displays a series of events in chronological order.",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojTimeline.html",
  "properties": {
    "animationOnDataChange": {
      "description": "Defines the animation that is applied on data changes.",
      "type": "string",
      "displayName": "Animation On Data Change",
      "value": "none",
      "help": "animationOnDataChange",
      "enumValues": [
        "auto",
        "none"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "none": {
          "displayName": "None"
        }
      }
    },
    "animationOnDisplay": {
      "description": "Defines the animation that is shown on initial display.",
      "type": "string",
      "displayName": "Animation On Display",
      "value": "none",
      "help": "animationOnDisplay",
      "enumValues": [
        "auto",
        "none"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "none": {
          "displayName": "None"
        }
      }
    },
    "end": {
      "description": "The end time of the timeline. A valid value is required in order for the timeline to properly render. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "End",
      "value": "",
      "format": "date-time",
      "help": "end"
    },
    "majorAxis": {
      "description": "An object with the following properties, used to define a timeline axis. If not specified, no axis labels will be shown above the minor axis or in the overview.",
      "type": "object",
      "displayName": "Major Axis",
      "help": "majorAxis",
      "properties": {
        "converter": {
          "description": "A converter (an object literal or instance that duck types Converter) used to format the labels of the major axis for all 'scale' values, or an object literal whose keys are 'scale' values that map specific converters for scale specific formatting (see ojTimeAxis.Converters). See DateTimeConverterFactory for details on creating built-in datetime converters. See the major-axis attribute for usage examples.",
          "type": "object",
          "displayName": "Converter",
          "value": "{\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}",
          "help": "majorAxis.converter",
          "properties": {
            "default": {
              "description": "The default converter (an object literal or instance that duck types Converter) to use for all 'scale' values that do not otherwise have a converter object provided. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>"
            },
            "seconds": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'seconds' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric, minute: 2-digit, second: 2-digit})"
            },
            "minutes": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'minutes' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric, minute: 2-digit})"
            },
            "hours": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'hours' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric})"
            },
            "days": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'days' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: numeric, day: 2-digit})"
            },
            "weeks": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'weeks' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: numeric, day: 2-digit})"
            },
            "months": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'months' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: long})"
            },
            "quarters": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'quarters' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: long})"
            },
            "years": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'years' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({year: numeric})"
            }
          }
        },
        "scale": {
          "description": "The time scale used for the major axis. If not specified, no axis labels will be shown above the minor axis or in the overview. See the major-axis attribute for usage examples.",
          "type": "string",
          "displayName": "Scale",
          "value": null,
          "help": "majorAxis.scale",
          "enumValues": [
            "days",
            "hours",
            "minutes",
            "months",
            "quarters",
            "seconds",
            "weeks",
            "years"
          ],
          "propertyEditorValues": {
            "days": {
              "displayName": "Days"
            },
            "hours": {
              "displayName": "Hours"
            },
            "minutes": {
              "displayName": "Minutes"
            },
            "months": {
              "displayName": "Months"
            },
            "quarters": {
              "displayName": "Quarters"
            },
            "seconds": {
              "displayName": "Seconds"
            },
            "weeks": {
              "displayName": "Weeks"
            },
            "years": {
              "displayName": "Years"
            }
          }
        },
        "svgStyle": {
          "description": "The CSS style defining any additional styling of the axis. If not specified, no additional styling will be applied. See the major-axis attribute for usage examples.",
          "type": "object",
          "displayName": "Svg Style",
          "value": {},
          "help": "majorAxis.svgStyle"
        }
      }
    },
    "minorAxis": {
      "description": "An object with the following properties, used to define a timeline axis. This is required in order for the timeline to properly render.",
      "type": "object",
      "displayName": "Minor Axis",
      "help": "minorAxis",
      "properties": {
        "converter": {
          "description": "A converter (an object literal or instance that duck types Converter) used to format the labels of the minor axis for all 'scale' values, or an object literal whose keys are 'scale' values that map specific converters for scale specific formatting (see ojTimeAxis.Converters). See DateTimeConverterFactory for details on creating built-in datetime converters. See the minor-axis attribute for usage examples.",
          "type": "object",
          "displayName": "Converter",
          "value": "{\"default\": null, \"seconds\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit', 'second': '2-digit'}), \"minutes\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric', 'minute': '2-digit'}), \"hours\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'hour': 'numeric'}), \"days\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"weeks\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'numeric', 'day': '2-digit'}), \"months\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"quarters\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'month': 'long'}), \"years\": oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({'year': 'numeric'})}",
          "help": "minorAxis.converter",
          "properties": {
            "default": {
              "description": "The default converter (an object literal or instance that duck types Converter) to use for all 'scale' values that do not otherwise have a converter object provided. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>"
            },
            "seconds": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'seconds' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric, minute: 2-digit, second: 2-digit})"
            },
            "minutes": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'minutes' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric, minute: 2-digit})"
            },
            "hours": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'hours' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({hour: numeric})"
            },
            "days": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'days' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: numeric, day: 2-digit})"
            },
            "weeks": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'weeks' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: numeric, day: 2-digit})"
            },
            "months": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'months' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: long})"
            },
            "quarters": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'quarters' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({month: long})"
            },
            "years": {
              "description": "The converter (an object literal or instance that duck types Converter) used for the 'years' scale. If not specified, the default converter will be used for this scale. See DateTimeConverterFactory for details on creating built-in datetime converters.",
              "type": "oj.Converter<string>",
              "value": "oj.Validation.converterFactory(oj.ConverterFactory.CONVERTER_TYPE_DATETIME).createConverter({year: numeric})"
            }
          }
        },
        "scale": {
          "description": "The time scale used for the minor axis. This is required in order for the timeline to properly render. See the minor-axis attribute for usage examples.",
          "type": "string",
          "displayName": "Scale",
          "value": null,
          "help": "minorAxis.scale",
          "enumValues": [
            "days",
            "hours",
            "minutes",
            "months",
            "quarters",
            "seconds",
            "weeks",
            "years"
          ],
          "propertyEditorValues": {
            "days": {
              "displayName": "Days"
            },
            "hours": {
              "displayName": "Hours"
            },
            "minutes": {
              "displayName": "Minutes"
            },
            "months": {
              "displayName": "Months"
            },
            "quarters": {
              "displayName": "Quarters"
            },
            "seconds": {
              "displayName": "Seconds"
            },
            "weeks": {
              "displayName": "Weeks"
            },
            "years": {
              "displayName": "Years"
            }
          }
        },
        "svgStyle": {
          "description": "The CSS style defining any additional styling of the axis. If not specified, no additional styling will be applied. See the minor-axis attribute for usage examples.",
          "type": "object",
          "displayName": "Svg Style",
          "value": {},
          "help": "minorAxis.svgStyle"
        },
        "zoomOrder": {
          "description": "An array of strings containing the names of scales used for zooming from longest to shortest. If not specified, the 'scale' specified on the axis will be used at all zoom levels. See the minor-axis attribute for usage examples.",
          "type": "Array<string>",
          "displayName": "Zoom Order",
          "value": null,
          "help": "minorAxis.zoomOrder"
        }
      }
    },
    "orientation": {
      "description": "The orientation of the element.",
      "type": "string",
      "displayName": "Orientation",
      "value": "horizontal",
      "help": "orientation",
      "enumValues": [
        "horizontal",
        "vertical"
      ],
      "propertyEditorValues": {
        "horizontal": {
          "displayName": "Horizontal"
        },
        "vertical": {
          "displayName": "Vertical"
        }
      }
    },
    "overview": {
      "description": "An object with the following properties, used to define a timeline overview. If not specified, no overview will be shown.",
      "type": "object",
      "displayName": "Overview",
      "help": "overview",
      "properties": {
        "rendered": {
          "description": "Specifies whether the overview scrollbar is rendered. See the overview attribute for usage examples.",
          "type": "string",
          "displayName": "Rendered",
          "value": "off",
          "help": "overview.rendered",
          "enumValues": [
            "off",
            "on"
          ],
          "propertyEditorValues": {
            "off": {
              "displayName": "Off"
            },
            "on": {
              "displayName": "On"
            }
          }
        },
        "svgStyle": {
          "description": "The CSS style defining any additional styling of the overview. If not specified, no additional styling will be applied. See the overview attribute for usage examples.",
          "type": "object",
          "displayName": "Svg Style",
          "value": {},
          "help": "overview.svgStyle"
        }
      }
    },
    "referenceObjects": {
      "description": "The array of reference objects associated with the timeline. For each reference object, a line is rendered at the specified value. Currently only the first reference object in the array is supported. Any additional objects supplied in the array will be ignored.",
      "type": "Array<Object>",
      "displayName": "Reference Objects",
      "value": [],
      "help": "referenceObjects",
      "extension": {
        "vbcs": {
          "itemProperties": {
            "value": {
              "description": "The time value of this reference object. If not specified, no reference object will be shown. See Date and Time Formats for more details on the required string formats.",
              "type": "string"
            }
          }
        }
      }
    },
    "selection": {
      "description": "An array of strings containing the ids of the initially selected items.",
      "type": "Array<string>",
      "displayName": "Selection",
      "value": [],
      "writeback": true,
      "help": "selection"
    },
    "selectionMode": {
      "description": "The type of selection behavior that is enabled on the timeline. If 'single' is specified, only a single item across all series can be selected at once. If 'multiple', any number of items across all series can be selected at once. Otherwise, selection is disabled.",
      "type": "string",
      "displayName": "Selection Mode",
      "value": "none",
      "help": "selectionMode",
      "enumValues": [
        "multiple",
        "none",
        "single"
      ],
      "propertyEditorValues": {
        "multiple": {
          "displayName": "Multiple"
        },
        "none": {
          "displayName": "None"
        },
        "single": {
          "displayName": "Single"
        }
      }
    },
    "series": {
      "description": "An array of objects with the following properties, used to define a timeline series. Also accepts a Promise that will resolve with an array for deferred data rendering. No data will be rendered if the Promise is rejected.",
      "type": "Array<Object>|Promise",
      "displayName": "Series",
      "value": null,
      "help": "series",
      "extension": {
        "vbcs": {
          "itemProperties": {
            "emptyText": {
              "description": "The text of an empty timeline series.",
              "type": "string"
            },
            "id": {
              "description": "The identifier for the timeline series.",
              "type": "string"
            },
            "itemLayout": {
              "description": "The direction in which items are laid out when in a horizontal orientation. This attribute is ignored when in a vertical orientation.",
              "type": "\"bottomToTop\"|\"topToBottom\"|\"auto\"",
              "value": "\"auto\""
            },
            "label": {
              "description": "The label displayed on the timeline series. In not specified, no label will be shown.",
              "type": "string"
            },
            "svgStyle": {
              "description": "The CSS style defining any additional styling of the series. If not specified, no additional styling will be applied.",
              "type": "object"
            },
            "items": {
              "description": "An array of items. If not specified, no data will be shown in this series.",
              "type": "Array<oj.ojTimeline.SeriesItem>"
            }
          }
        }
      }
    },
    "start": {
      "description": "The start time of the timeline. A valid value is required in order for the timeline to properly render. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Start",
      "value": "",
      "format": "date-time",
      "help": "start"
    },
    "styleDefaults": {
      "description": "An object with the following properties, used to define default styling for the timeline. Component CSS classes should be used to set component wide styling. This API should be used only for styling a specific instance of the component. Properties specified on this object may be overridden by specifications on the data item. Some property default values come from the CSS and varies based on theme.",
      "type": "object",
      "displayName": "Style Defaults",
      "help": "styleDefaults",
      "properties": {
        "animationDuration": {
          "description": "The duration of the animations, in milliseconds. The default value comes from the CSS and varies based on theme. For data change animations with multiple stages, this attribute defines the duration of each stage. For example, if an animation contains two stages, the total duration will be two times this attribute's value. See the style-defaults attribute for usage examples.",
          "type": "number",
          "displayName": "Animation Duration",
          "units": "\"milliseconds\"",
          "help": "styleDefaults.animationDuration"
        },
        "borderColor": {
          "description": "The border color of the timeline. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
          "type": "string",
          "displayName": "Border Color",
          "format": "color",
          "help": "styleDefaults.borderColor"
        },
        "item": {
          "description": "An object with the following properties, used to define the default styling for the timeline item. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Item",
          "value": {},
          "help": "styleDefaults.item",
          "properties": {
            "backgroundColor": {
              "description": "The background color of the timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Background Color",
              "format": "color",
              "help": "styleDefaults.item.backgroundColor"
            },
            "borderColor": {
              "description": "The border color of the timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Border Color",
              "format": "color",
              "help": "styleDefaults.item.borderColor"
            },
            "descriptionStyle": {
              "description": "The CSS style defining the style of the timeline item description text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Description Style",
              "help": "styleDefaults.item.descriptionStyle"
            },
            "hoverBackgroundColor": {
              "description": "The background color of the highlighted timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Hover Background Color",
              "format": "color",
              "help": "styleDefaults.item.hoverBackgroundColor"
            },
            "hoverBorderColor": {
              "description": "The border color of the highlighted timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Hover Border Color",
              "format": "color",
              "help": "styleDefaults.item.hoverBorderColor"
            },
            "selectedBackgroundColor": {
              "description": "The background color of the selected timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Selected Background Color",
              "format": "color",
              "help": "styleDefaults.item.selectedBackgroundColor"
            },
            "selectedBorderColor": {
              "description": "The border color of the selected timeline items. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Selected Border Color",
              "format": "color",
              "help": "styleDefaults.item.selectedBorderColor"
            },
            "titleStyle": {
              "description": "The CSS style defining the style of the timeline item title text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Title Style",
              "help": "styleDefaults.item.titleStyle"
            }
          }
        },
        "majorAxis": {
          "description": "An object with the following properties, used to define the default styling for the major time axis. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Major Axis",
          "value": {},
          "help": "styleDefaults.majorAxis",
          "properties": {
            "labelStyle": {
              "description": "The CSS style defining the style of the major time axis label text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Label Style",
              "help": "styleDefaults.majorAxis.labelStyle"
            },
            "separatorColor": {
              "description": "The color of the major time axis separators. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Separator Color",
              "format": "color",
              "help": "styleDefaults.majorAxis.separatorColor"
            }
          }
        },
        "minorAxis": {
          "description": "An object with the following properties, used to define the default styling for the time axis. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Minor Axis",
          "value": {},
          "help": "styleDefaults.minorAxis",
          "properties": {
            "backgroundColor": {
              "description": "The background color of the time axis. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Background Color",
              "format": "color",
              "help": "styleDefaults.minorAxis.backgroundColor"
            },
            "borderColor": {
              "description": "The border color of the time axis. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Border Color",
              "format": "color",
              "help": "styleDefaults.minorAxis.borderColor"
            },
            "labelStyle": {
              "description": "The CSS style defining the style of the time axis label text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Label Style",
              "help": "styleDefaults.minorAxis.labelStyle"
            },
            "separatorColor": {
              "description": "The color of the time axis separators. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Separator Color",
              "format": "color",
              "help": "styleDefaults.minorAxis.separatorColor"
            }
          }
        },
        "overview": {
          "description": "An object with the following properties, used to define the default styling for the timeline overview. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Overview",
          "help": "styleDefaults.overview",
          "properties": {
            "backgroundColor": {
              "description": "The background color of the timeline overview. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Background Color",
              "format": "color",
              "help": "styleDefaults.overview.backgroundColor"
            },
            "labelStyle": {
              "description": "The CSS style defining the style of the timeline overview label text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Label Style",
              "help": "styleDefaults.overview.labelStyle"
            },
            "window": {
              "description": "An object with the following properties, used to define the default styling for the timeline overview window. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Window",
              "value": {},
              "help": "styleDefaults.overview.window",
              "properties": {
                "backgroundColor": {
                  "description": "The background color of the timeline overview window. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
                  "type": "string",
                  "displayName": "Background Color",
                  "format": "color",
                  "help": "styleDefaults.overview.window.backgroundColor"
                },
                "borderColor": {
                  "description": "The border color of the timeline overview window. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
                  "type": "string",
                  "displayName": "Border Color",
                  "format": "color",
                  "help": "styleDefaults.overview.window.borderColor"
                }
              }
            }
          }
        },
        "referenceObject": {
          "description": "An object with the following properties, used to define the default styling for the reference objects. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Reference Object",
          "value": {},
          "help": "styleDefaults.referenceObject",
          "properties": {
            "color": {
              "description": "The color of the reference objects. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Color",
              "format": "color",
              "help": "styleDefaults.referenceObject.color"
            }
          }
        },
        "series": {
          "description": "An object with the following properties, used to define the default styling for the timeline series. See the style-defaults attribute for usage examples.",
          "type": "object",
          "displayName": "Series",
          "value": {},
          "help": "styleDefaults.series",
          "properties": {
            "backgroundColor": {
              "description": "The background color of the series. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "string",
              "displayName": "Background Color",
              "format": "color",
              "help": "styleDefaults.series.backgroundColor"
            },
            "colors": {
              "description": "The array defining the default color ramp for the series items. See the style-defaults attribute for usage examples.",
              "type": "Array<string>",
              "displayName": "Colors",
              "help": "styleDefaults.series.colors"
            },
            "emptyTextStyle": {
              "description": "The CSS style defining the style of the series empty text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Empty Text Style",
              "help": "styleDefaults.series.emptyTextStyle"
            },
            "labelStyle": {
              "description": "The CSS style defining the style of the series label text. The default value comes from the CSS and varies based on theme. See the style-defaults attribute for usage examples.",
              "type": "object",
              "displayName": "Label Style",
              "help": "styleDefaults.series.labelStyle"
            }
          }
        }
      }
    },
    "tooltip": {
      "description": "An object containing an optional callback function for tooltip customization.",
      "type": "object",
      "displayName": "Tooltip",
      "value": {
        "renderer": null
      },
      "help": "tooltip",
      "properties": {
        "renderer": {
          "description": "A function that returns a custom tooltip. Note that the default is for a tooltip to be displayed. See the tooltip attribute for usage examples.",
          "type": "function",
          "displayName": "Renderer",
          "value": null,
          "help": "tooltip.renderer",
          "properties": {
            "parentElement": {
              "description": "The tooltip element. This can be used to change the tooltip border or background color.",
              "type": "Element"
            },
            "data": {
              "description": "The data object of the hovered item.",
              "type": "oj.ojTimeline.SeriesItem"
            },
            "seriesData": {
              "description": "The data for the series the hovered item belongs to.",
              "type": "oj.ojTimeline.Series"
            },
            "componentElement": {
              "description": "The timeline element.",
              "type": "Element"
            },
            "color": {
              "description": "The color of the hovered item.",
              "type": "string"
            }
          }
        }
      }
    },
    "trackResize": {
      "description": "Defines whether the element will automatically render in response to changes in size. If set to off, then the application is responsible for calling refresh to render the element at the new size.",
      "type": "string",
      "displayName": "Track Resize",
      "value": "on",
      "help": "trackResize",
      "enumValues": [
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "translations": {
      "description": "A collection of translated resources from the translation bundle, or null if this component has no resources.",
      "type": "object|null",
      "displayName": "Translations",
      "value": {},
      "translatable": true,
      "help": "translations",
      "properties": {
        "accessibleItemDesc": {
          "description": "Provides properties to customize the screen reader text describing an item's description text.",
          "type": "string",
          "displayName": "Accessible Item Desc",
          "help": "translations.accessibleItemDesc"
        },
        "accessibleItemEnd": {
          "description": "Provides properties to customize the screen reader text describing an item's end time.",
          "type": "string",
          "displayName": "Accessible Item End",
          "help": "translations.accessibleItemEnd"
        },
        "accessibleItemStart": {
          "description": "Provides properties to customize the screen reader text describing an item's start time.",
          "type": "string",
          "displayName": "Accessible Item Start",
          "help": "translations.accessibleItemStart"
        },
        "accessibleItemTitle": {
          "description": "Provides properties to customize the screen reader text describing an item's title text.",
          "type": "string",
          "displayName": "Accessible Item Title",
          "help": "translations.accessibleItemTitle"
        },
        "componentName": {
          "description": "Used to describe the data visualization type for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Component Name",
          "help": "translations.componentName"
        },
        "labelAndValue": {
          "description": "Used to display a label and its value.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label And Value",
          "help": "translations.labelAndValue"
        },
        "labelClearSelection": {
          "description": "Text shown for clearing multiple selection on touch devices.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Clear Selection",
          "help": "translations.labelClearSelection"
        },
        "labelCountWithTotal": {
          "description": "Used to display a count out of a total.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Count With Total",
          "help": "translations.labelCountWithTotal"
        },
        "labelDataVisualization": {
          "description": "Label for data visualizations used for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Data Visualization",
          "help": "translations.labelDataVisualization"
        },
        "labelDate": {
          "description": "Used for the default tooltip label for instance item information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Date",
          "help": "translations.labelDate"
        },
        "labelDescription": {
          "description": "Used for the default tooltip label for item description information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Description",
          "help": "translations.labelDescription"
        },
        "labelEnd": {
          "description": "Used for the default tooltip label for end time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label End",
          "help": "translations.labelEnd"
        },
        "labelInvalidData": {
          "description": "Text shown when the component receives invalid data.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Invalid Data",
          "help": "translations.labelInvalidData"
        },
        "labelNoData": {
          "description": "Text shown when the component receives no data.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label No Data",
          "help": "translations.labelNoData"
        },
        "labelSeries": {
          "description": "Used for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Series",
          "help": "translations.labelSeries"
        },
        "labelStart": {
          "description": "Used for the default tooltip label for start time information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Start",
          "help": "translations.labelStart"
        },
        "labelTitle": {
          "description": "Used for the default tooltip label for item title information.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Title",
          "help": "translations.labelTitle"
        },
        "stateCollapsed": {
          "description": "Used to describe the collapsed state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Collapsed",
          "help": "translations.stateCollapsed"
        },
        "stateDrillable": {
          "description": "Used to describe a drillable object for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Drillable",
          "help": "translations.stateDrillable"
        },
        "stateExpanded": {
          "description": "Used to describe the expanded state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Expanded",
          "help": "translations.stateExpanded"
        },
        "stateHidden": {
          "description": "Used to describe the hidden state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Hidden",
          "help": "translations.stateHidden"
        },
        "stateIsolated": {
          "description": "Used to describe the isolated state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Isolated",
          "help": "translations.stateIsolated"
        },
        "stateMaximized": {
          "description": "Used to describe the maximized state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Maximized",
          "help": "translations.stateMaximized"
        },
        "stateMinimized": {
          "description": "Used to describe the minimized state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Minimized",
          "help": "translations.stateMinimized"
        },
        "stateSelected": {
          "description": "Used to describe the selected state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Selected",
          "help": "translations.stateSelected"
        },
        "stateUnselected": {
          "description": "Used to describe the unselected state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Unselected",
          "help": "translations.stateUnselected"
        },
        "stateVisible": {
          "description": "Used to describe the visible state for accessibility.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "State Visible",
          "help": "translations.stateVisible"
        },
        "tooltipZoomIn": {
          "description": "Used for the zoom in tooltip.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Tooltip Zoom In",
          "help": "translations.tooltipZoomIn"
        },
        "tooltipZoomOut": {
          "description": "Used for the zoom out tooltip.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Tooltip Zoom Out",
          "help": "translations.tooltipZoomOut"
        }
      }
    },
    "valueFormats": {
      "description": "An object specifying value formatting and tooltip behavior, whose keys generally correspond to item properties.",
      "type": "object",
      "displayName": "Value Formats",
      "help": "valueFormats",
      "properties": {
        "date": {
          "description": "Specifies tooltip behavior for the date value of an instance item. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "Date",
          "help": "valueFormats.date",
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "object",
              "displayName": "Converter",
              "value": null,
              "help": "valueFormats.date.converter"
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "auto",
              "help": "valueFormats.date.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelDate. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.date.tooltipLabel"
            }
          }
        },
        "description": {
          "description": "Specifies tooltip behavior for the description value. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "Description",
          "help": "valueFormats.description",
          "properties": {
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "off",
              "help": "valueFormats.description.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelDescription. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.description.tooltipLabel"
            }
          }
        },
        "end": {
          "description": "Specifies tooltip behavior for the end value. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "End",
          "help": "valueFormats.end",
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "object",
              "displayName": "Converter",
              "value": null,
              "help": "valueFormats.end.converter"
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "auto",
              "help": "valueFormats.end.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelEnd. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.end.tooltipLabel"
            }
          }
        },
        "series": {
          "description": "Specifies tooltip behavior for the series value. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "Series",
          "help": "valueFormats.series",
          "properties": {
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "off",
              "help": "valueFormats.series.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelSeries. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.series.tooltipLabel"
            }
          }
        },
        "start": {
          "description": "Specifies tooltip behavior for the start value. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "Start",
          "help": "valueFormats.start",
          "properties": {
            "converter": {
              "description": "A converter (an object literal or instance that duck types Converter) used to format the label. If not specified, a default converter depending on the axes scale is used. See DateTimeConverterFactory for details on creating built-in datetime converters. See the value-formats attribute for usage examples.",
              "type": "object",
              "displayName": "Converter",
              "value": null,
              "help": "valueFormats.start.converter"
            },
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "auto",
              "help": "valueFormats.start.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelStart. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.start.tooltipLabel"
            }
          }
        },
        "title": {
          "description": "Specifies tooltip behavior for the title value. See the value-formats attribute for usage examples.",
          "type": "object",
          "displayName": "Title",
          "help": "valueFormats.title",
          "properties": {
            "tooltipDisplay": {
              "description": "Whether the value is displayed in the tooltip. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Display",
              "value": "off",
              "help": "valueFormats.title.tooltipDisplay",
              "enumValues": [
                "auto",
                "off"
              ],
              "propertyEditorValues": {
                "auto": {
                  "displayName": "Auto"
                },
                "off": {
                  "displayName": "Off"
                }
              }
            },
            "tooltipLabel": {
              "description": "A string representing the label that is displayed before the value in the tooltip. The default value comes from ojTimeline.translations.labelTitle. See the value-formats attribute for usage examples.",
              "type": "string",
              "displayName": "Tooltip Label",
              "translatable": true,
              "help": "valueFormats.title.tooltipLabel"
            }
          }
        }
      }
    },
    "viewportEnd": {
      "description": "The end time of the timeline's viewport. If not specified or invalid, this will default to a value determined by the initial 'scale' of the minor axis and the width of the timeline. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Viewport End",
      "value": "",
      "format": "date-time",
      "help": "viewportEnd"
    },
    "viewportStart": {
      "description": "The start time of the timeline's viewport. If not specified or invalid, this will default to a value determined by the initial 'scale' of the minor axis and the width of the timeline. See Date and Time Formats for more details on the required string formats.",
      "type": "string",
      "displayName": "Viewport Start",
      "value": "",
      "format": "date-time",
      "help": "viewportStart"
    }
  },
  "methods": {
    "getContextByNode": {
      "description": "Returns an object with context for the given child DOM node. This will always contain the subid for the node, defined as the 'subId' property on the context object. Additional component specific information may also be included. For more details on returned objects, see context objects.",
      "help": "getContextByNode",
      "params": [
        {
          "name": "node",
          "description": "The child DOM node",
          "type": "Element"
        }
      ],
      "return": "object|null"
    },
    "refresh": {
      "description": "Refreshes the component.",
      "help": "refresh",
      "return": "void"
    },
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a [property]Changed event.",
      "help": "setProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "any"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "help": "getProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "any"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "help": "setProperties",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "object"
        }
      ],
      "return": "void"
    }
  },
  "events": {
    "ojViewportChange": {
      "description": "Triggered after the viewport is changed due to a zoom or scroll operation.",
      "bubbles": true,
      "help": "viewportChange",
      "detail": {
        "viewportStart": {
          "description": "the start of the new viewport on a timeline",
          "type": "string"
        },
        "viewportEnd": {
          "description": "the end of the new viewport on a timeline",
          "type": "string"
        },
        "minorAxisScale": {
          "description": "the time scale of the minor axis",
          "type": "string"
        }
      }
    }
  },
  "slots": {
    "contextMenu": {
      "description": "The contextMenu slot is set on the <oj-menu> instance within this element. It designates the JET Menu that this component should launch as a context menu.",
      "maxItems": 1,
      "help": "contextMenu"
    }
  }
}