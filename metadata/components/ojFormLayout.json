{
  "name": "oj-form-layout",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Form Layout",
  "type": "core",
  "description": "Used to group child elements in an organized layout that can be optimized for multiple display sizes.",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojFormLayout.html",
  "properties": {
    "direction": {
      "description": "Specifies the layout direction of the form layout children.",
      "type": "string",
      "displayName": "Direction",
      "value": "column",
      "help": "direction",
      "enumValues": [
        "column",
        "row"
      ],
      "propertyEditorValues": {
        "column": {
          "description": "Components are laid out in columns",
          "displayName": "Column"
        },
        "row": {
          "description": "Components are laid out in rows",
          "displayName": "Row"
        }
      }
    },
    "labelEdge": {
      "description": "Specifies how the label is aligned with its editable value component.",
      "type": "string",
      "displayName": "Label Edge",
      "value": "top",
      "help": "labelEdge",
      "enumValues": [
        "start",
        "top"
      ],
      "propertyEditorValues": {
        "start": {
          "description": "Label is inline with the start of its editable value component",
          "displayName": "Start"
        },
        "top": {
          "description": "Label is on top of its editable value component",
          "displayName": "Top"
        }
      }
    },
    "labelWidth": {
      "description": "Specifies the label width. This specifies the width of the oj-label elements. This can be any legal CSS width.",
      "type": "string",
      "displayName": "Label Width",
      "value": "33%",
      "help": "labelWidth"
    },
    "labelWrapping": {
      "description": "Specifies if the label text should wrap or truncate.",
      "type": "string",
      "displayName": "Label Wrapping",
      "value": "wrap",
      "help": "labelWrapping",
      "enumValues": [
        "truncate",
        "wrap"
      ],
      "propertyEditorValues": {
        "truncate": {
          "description": "Label will trunctate if needed",
          "displayName": "Truncate"
        },
        "wrap": {
          "description": "Label will wrap if needed",
          "displayName": "Wrap"
        }
      }
    },
    "maxColumns": {
      "description": "Specifies the maximum number of columns. The actual number of columns may be less, depending on the [direction]ojFormLayout#direction attribute. If direction is \"column\", the layout is responsive and browsers automatically reduce the number of columns to fit the width of the viewport. If direction is \"row\", the number of columns is fixed to the max-columns value. Applications can choose to make it responsive by using ResponsiveKnockoutUtils to adjust the value. See the oj-form-layout - Across demo for an example. ",
      "type": "number",
      "displayName": "Max Columns",
      "value": 1,
      "minimum": 1,
      "help": "maxColumns"
    }
  },
  "methods": {
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a [property]Changed event.",
      "help": "setProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "any"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "help": "getProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "any"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "help": "setProperties",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "object"
        }
      ],
      "return": "void"
    },
    "refresh": {
      "description": "Refreshes the visual state of the component.",
      "help": "refresh",
      "return": "void"
    }
  }
}