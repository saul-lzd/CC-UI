{
  "name": "oj-masonry-layout",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Masonry Layout",
  "type": "core",
  "styleClasses": [
    {
      "styleGroup": [
        "oj-masonrylayout-tile-1x1"
      ],
      "description": "A tile that spans 1 column and 1 row."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-1x2"
      ],
      "description": "A tile that spans 1 column and 2 rows."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-1x3"
      ],
      "description": "A tile that spans 1 column and 3 rows."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-2x1"
      ],
      "description": "A tile that spans 2 columns and 1 row."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-2x2"
      ],
      "description": "A tile that spans 2 columns and 2 rows."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-2x3"
      ],
      "description": "A tile that spans 2 columns and 3 rows."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-3x1"
      ],
      "description": "A tile that spans 3 columns and 1 row."
    },
    {
      "styleGroup": [
        "oj-masonrylayout-tile-3x2"
      ],
      "description": "A tile that spans 3 columns and 2 rows."
    }
  ],
  "description": "Container element that lays out its children in a grid of tiles.",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojMasonryLayout.html",
  "properties": {
    "reorderHandle": {
      "description": "Specifies the selector of the child DOM element that can be used to reorder the child.",
      "type": "string",
      "displayName": "Reorder Handle",
      "value": null,
      "help": "reorderHandle"
    },
    "translations": {
      "description": "A collection of translated resources from the translation bundle, or null if this component has no resources.",
      "type": "object|null",
      "displayName": "Translations",
      "value": {},
      "translatable": true,
      "help": "translations",
      "properties": {
        "labelCut": {
          "description": "Context menu text used for cutting a tile.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Cut",
          "help": "translations.labelCut"
        },
        "labelPasteAfter": {
          "description": "Context menu text used for pasting a tile after another tile.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Paste After",
          "help": "translations.labelPasteAfter"
        },
        "labelPasteBefore": {
          "description": "Context menu text used for pasting a tile before another tile.\n\nSee the translations attribute for usage examples.",
          "type": "string",
          "displayName": "Label Paste Before",
          "help": "translations.labelPasteBefore"
        }
      }
    }
  },
  "methods": {
    "refresh": {
      "description": "Refreshes the visual state of the masonryLayout.",
      "help": "refresh",
      "return": "void"
    },
    "resizeTile": {
      "description": "Resize a tile.",
      "help": "resizeTile",
      "params": [
        {
          "name": "selector",
          "description": "Selector identifying the tile to resize.",
          "type": "string"
        },
        {
          "name": "sizeStyleClass",
          "description": "New size style class to apply to the tile.",
          "type": "string"
        }
      ],
      "return": "void"
    },
    "insertTile": {
      "description": "Insert a tile.",
      "help": "insertTile",
      "params": [
        {
          "name": "selector",
          "description": "Selector identifying the tile to insert. The tile does not need to be a child of the oj-masonry-layout when this method is called. This method will reparent the tile to the oj-masonry-layout.",
          "type": "string"
        },
        {
          "name": "index",
          "description": "The 0-based index into the set of rendered oj-masonry-layout children where the tile will be inserted.",
          "type": "number"
        }
      ],
      "return": "void"
    },
    "removeTile": {
      "description": "Remove a tile.",
      "help": "removeTile",
      "params": [
        {
          "name": "selector",
          "description": "Selector identifying the tile to remove.",
          "type": "string"
        }
      ],
      "return": "void"
    },
    "setProperty": {
      "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a [property]Changed event.",
      "help": "setProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to set. Supports dot notation for subproperty access.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "The new value to set the property to.",
          "type": "any"
        }
      ],
      "return": "void"
    },
    "getProperty": {
      "description": "Retrieves a value for a property or a single subproperty for complex properties.",
      "help": "getProperty",
      "params": [
        {
          "name": "property",
          "description": "The property name to get. Supports dot notation for subproperty access.",
          "type": "string"
        }
      ],
      "return": "any"
    },
    "setProperties": {
      "description": "Performs a batch set of properties.",
      "help": "setProperties",
      "params": [
        {
          "name": "properties",
          "description": "An object containing the property and value pairs to set.",
          "type": "object"
        }
      ],
      "return": "void"
    }
  },
  "events": {
    "ojAnimateStart": {
      "description": "Event triggered when the default animation of a particular action is about to start.",
      "cancelable": true,
      "help": "animateStart",
      "detail": {
        "action": {
          "description": "The action that triggers the animation. Supported values are: \"insert\" - when a tile is inserted \"move\" - when a tile is moved \"remove\" - when a tile is removed \"resize\" - when a tile is resized \"reorder\" - when a tile is reordered Note that some animation effects may not look appropriate for a given action.",
          "type": "string"
        },
        "element": {
          "description": "The element being animated.",
          "type": "Element"
        },
        "endCallback": {
          "description": "If the event listener calls event.preventDefault to cancel the default animation, it must call the endCallback function after it finishes its own animation handling and any custom animation has ended.",
          "type": "function"
        }
      }
    },
    "ojAnimateEnd": {
      "description": "Event triggered when the default animation of a particular action has ended.",
      "help": "animateEnd",
      "detail": {
        "action": {
          "description": "The action that triggers the animation. Supported values are: \"insert\" - when a tile is inserted \"move\" - when a tile is moved \"remove\" - when a tile is removed \"resize\" - when a tile is resized \"reorder\" - when a tile is reordered ",
          "type": "string"
        },
        "element": {
          "description": "The element being animated.",
          "type": "Element"
        }
      }
    },
    "ojBeforeInsert": {
      "description": "Event triggered before a tile is inserted.",
      "cancelable": true,
      "help": "beforeInsert",
      "detail": {
        "tile": {
          "description": "The tile that is about to be inserted.",
          "type": "Element"
        },
        "index": {
          "description": "The 0-based index into the set of rendered oj-masonry-layout children where the tile will be inserted.",
          "type": "number"
        }
      }
    },
    "ojInsert": {
      "description": "Event triggered after a tile is inserted.",
      "help": "insert",
      "detail": {
        "tile": {
          "description": "The tile that was inserted.",
          "type": "Element"
        },
        "index": {
          "description": "The 0-based index into the set of rendered oj-masonry-layout children where the tile was inserted.",
          "type": "number"
        }
      }
    },
    "ojBeforeRemove": {
      "description": "Event triggered before a tile is removed.",
      "cancelable": true,
      "help": "beforeRemove",
      "detail": {
        "tile": {
          "description": "The tile that will be removed.",
          "type": "Element"
        }
      }
    },
    "ojRemove": {
      "description": "Event triggered after a tile is removed.",
      "help": "remove",
      "detail": {
        "tile": {
          "description": "The tile that was removed.",
          "type": "Element"
        }
      }
    },
    "ojBeforeResize": {
      "description": "Event triggered before a tile is resized.",
      "cancelable": true,
      "help": "beforeResize",
      "detail": {
        "tile": {
          "description": "The tile that will be resized.",
          "type": "Element"
        },
        "previousSizeStyleClass": {
          "description": "The previous size style class applied to the tile.",
          "type": "string"
        },
        "sizeStyleClass": {
          "description": "The new size style class that will be applied to the tile.",
          "type": "string"
        }
      }
    },
    "ojResize": {
      "description": "Event triggered after a tile is resized.",
      "help": "resize",
      "detail": {
        "tile": {
          "description": "The tile that was resized.",
          "type": "Element"
        },
        "previousSizeStyleClass": {
          "description": "The previous size style class applied to the tile.",
          "type": "string"
        },
        "sizeStyleClass": {
          "description": "The new size style class applied to to the tile.",
          "type": "string"
        }
      }
    },
    "ojBeforeReorder": {
      "description": "Event triggered before a tile is reordered.",
      "cancelable": true,
      "help": "beforeReorder",
      "detail": {
        "tile": {
          "description": "The tile that will be reordered.",
          "type": "Element"
        },
        "fromIndex": {
          "description": "The 0-based index into the set of rendered oj-masonry-layout children from which the tile will be reordered.",
          "type": "number"
        }
      }
    },
    "ojReorder": {
      "description": "Event triggered after a tile is reordered.",
      "help": "reorder",
      "detail": {
        "tile": {
          "description": "The tile that was reordered.",
          "type": "Element"
        },
        "fromIndex": {
          "description": "The 0-based index into the set of rendered oj-masonry-layout children from which the tile was reordered.",
          "type": "number"
        },
        "toIndex": {
          "description": "The 0-based index into the set of rendered oj-masonry-layout children to which the tile was reordered.",
          "type": "number"
        }
      }
    }
  },
  "slots": {
    "": {
      "description": " <oj-masonry-layout> accepts arbitrary direct child elements that can be\nsized and positioned, which it will lay out as a grid of tiles. Each direct\nchild element must be styled using one of the predefined oj-masonrylayout-tile-CxR style classes to specify\nthe size of that tile. A tile can span multiple columns and/or rows.",
      "displayName": "default",
      "help": "Default"
    },
    "contextMenu": {
      "description": "The contextMenu slot is set on the <oj-menu> instance within this element. It designates the JET Menu that this component should launch as a context menu.",
      "maxItems": 1,
      "help": "contextMenu"
    }
  }
}