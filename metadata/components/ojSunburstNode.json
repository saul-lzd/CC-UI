{
  "name": "oj-sunburst-node",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Sunburst Node",
  "type": "core",
  "description": "ojSunburstNode",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojSunburstNode.html",
  "properties": {
    "borderColor": {
      "description": "The border color of the node.",
      "type": "string",
      "displayName": "Border Color",
      "value": "rgba(255,255,255,0.3)",
      "format": "color",
      "help": "borderColor"
    },
    "borderWidth": {
      "description": "The border width of the node.",
      "type": "number",
      "displayName": "Border Width",
      "value": 1,
      "units": "pixels",
      "help": "borderWidth"
    },
    "categories": {
      "description": "An optional array of category strings corresponding to this data item. This enables highlighting and filtering of individual data items through interactions with the legend and other visualization elements. The categories array of each node is required to be a superset of the categories array of its parent node. If not specified, the ids of the node and its ancestors will be used.",
      "type": "Array<string>",
      "displayName": "Categories",
      "value": [],
      "help": "categories"
    },
    "color": {
      "description": "The fill color of the node.",
      "type": "string",
      "displayName": "Color",
      "value": "#000000",
      "format": "color",
      "help": "color"
    },
    "drilling": {
      "description": "Specifies whether drilling is enabled for the node. Drillable nodes will show a pointer cursor on hover and fire an ojDrill event on click (double click if selection is enabled). To enable drilling for all nodes at once, use the drilling attribute in the top level.",
      "type": "string",
      "displayName": "Drilling",
      "value": "inherit",
      "help": "drilling",
      "enumValues": [
        "inherit",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "inherit": {
          "displayName": "Inherit"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "label": {
      "description": "The label for this node.",
      "type": "string",
      "displayName": "Label",
      "value": "",
      "help": "label"
    },
    "labelDisplay": {
      "description": "The label display behavior for the nodes. More labels are generally displayed when using rotation, with the trade off of readability. When auto is used, rotated or horizontal labels will be used based on the client browser and platform.",
      "type": "string",
      "displayName": "Label Display",
      "value": "auto",
      "help": "labelDisplay",
      "enumValues": [
        "auto",
        "horizontal",
        "off",
        "rotated"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "horizontal": {
          "displayName": "Horizontal"
        },
        "off": {
          "displayName": "Off"
        },
        "rotated": {
          "displayName": "Rotated"
        }
      }
    },
    "labelHalign": {
      "description": "The horizontal alignment for labels displayed within the node. Only applies to rotated text.",
      "type": "string",
      "displayName": "Label Halign",
      "value": "center",
      "help": "labelHalign",
      "enumValues": [
        "center",
        "inner",
        "outer"
      ],
      "propertyEditorValues": {
        "center": {
          "displayName": "Center"
        },
        "inner": {
          "displayName": "Inner"
        },
        "outer": {
          "displayName": "Outer"
        }
      }
    },
    "labelStyle": {
      "description": "The CSS style object defining the style of the label.",
      "type": "object",
      "displayName": "Label Style",
      "value": {},
      "help": "labelStyle"
    },
    "pattern": {
      "description": "The pattern used to fill the node.",
      "type": "string",
      "displayName": "Pattern",
      "value": "none",
      "help": "pattern",
      "enumValues": [
        "largeChecker",
        "largeCrosshatch",
        "largeDiagonalLeft",
        "largeDiagonalRight",
        "largeDiamond",
        "largeTriangle",
        "none",
        "smallChecker",
        "smallCrosshatch",
        "smallDiagonalLeft",
        "smallDiagonalRight",
        "smallDiamond",
        "smallTriangle"
      ],
      "propertyEditorValues": {
        "largeChecker": {
          "displayName": "Large Checker"
        },
        "largeCrosshatch": {
          "displayName": "Large Crosshatch"
        },
        "largeDiagonalLeft": {
          "displayName": "Large Diagonal Left"
        },
        "largeDiagonalRight": {
          "displayName": "Large Diagonal Right"
        },
        "largeDiamond": {
          "displayName": "Large Diamond"
        },
        "largeTriangle": {
          "displayName": "Large Triangle"
        },
        "none": {
          "displayName": "None"
        },
        "smallChecker": {
          "displayName": "Small Checker"
        },
        "smallCrosshatch": {
          "displayName": "Small Crosshatch"
        },
        "smallDiagonalLeft": {
          "displayName": "Small Diagonal Left"
        },
        "smallDiagonalRight": {
          "displayName": "Small Diagonal Right"
        },
        "smallDiamond": {
          "displayName": "Small Diamond"
        },
        "smallTriangle": {
          "displayName": "Small Triangle"
        }
      }
    },
    "radius": {
      "description": "The radius of the node relative to the other nodes.",
      "type": "number",
      "displayName": "Radius",
      "value": 1,
      "help": "radius"
    },
    "selectable": {
      "description": "Specifies whether or not the node will be selectable.",
      "type": "string",
      "displayName": "Selectable",
      "value": "auto",
      "help": "selectable",
      "enumValues": [
        "auto",
        "off"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "off": {
          "displayName": "Off"
        }
      }
    },
    "shortDesc": {
      "description": "The description of this node. This is used for accessibility and also for customizing the tooltip text.",
      "type": "string",
      "displayName": "Short Desc",
      "value": "",
      "help": "shortDesc"
    },
    "showDisclosure": {
      "description": "Specifies whether to display the expand/collapse button on hover for a specific node. If the button is clicked, the expanded attribute is updated with the new array of node ids.",
      "type": "string",
      "displayName": "Show Disclosure",
      "value": "inherit",
      "help": "showDisclosure",
      "enumValues": [
        "inherit",
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "inherit": {
          "displayName": "Inherit"
        },
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    },
    "svgClassName": {
      "description": "The CSS style class to apply to the node. The style class and inline style will override any other styling specified through the properties. For tooltip interactivity, it's recommended to also pass a representative color to the node color attribute.",
      "type": "string",
      "displayName": "Svg Class Name",
      "value": "",
      "help": "svgClassName"
    },
    "svgStyle": {
      "description": "The inline style to apply to the node. The style class and inline style will override any other styling specified through the properties. For tooltip interactivity, it's recommended to also pass a representative color to the node color attribute.",
      "type": "object",
      "displayName": "Svg Style",
      "value": {},
      "help": "svgStyle"
    },
    "value": {
      "description": "The relative size of the node.",
      "type": "number",
      "displayName": "Value",
      "help": "value"
    }
  }
}