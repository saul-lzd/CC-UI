{
  "name": "oj-diagram-node",
  "version": "6.0.0",
  "jetVersion": "6.0.0",
  "displayName": "Diagram Node",
  "type": "core",
  "description": "ojDiagramNode",
  "help": "https://docs.oracle.com/en/middleware/jet/6/reference-api/oj.ojDiagramNode.html",
  "properties": {
    "categories": {
      "description": "An array of category strings corresponding to this node. This allows highlighting and filtering of nodes. By default, the label is used as the node category.",
      "type": "Array<string>",
      "displayName": "Categories",
      "value": [],
      "help": "categories"
    },
    "descendantsConnectivity": {
      "description": "Indicates whether the specified object contains links that should be discovered in order to display promoted links.",
      "type": "string",
      "displayName": "Descendants Connectivity",
      "value": "unknown",
      "help": "descendantsConnectivity",
      "enumValues": [
        "connected",
        "disjoint",
        "unknown"
      ],
      "propertyEditorValues": {
        "connected": {
          "displayName": "Connected"
        },
        "disjoint": {
          "displayName": "Disjoint"
        },
        "unknown": {
          "displayName": "Unknown"
        }
      }
    },
    "icon": {
      "description": "Specifies an icon to be used as a graphical element for the node",
      "type": "object",
      "displayName": "Icon",
      "value": {},
      "help": "icon",
      "properties": {
        "borderColor": {
          "description": "The border color of the icon.",
          "type": "string",
          "displayName": "Border Color",
          "format": "color",
          "help": "icon.borderColor"
        },
        "borderRadius": {
          "description": "The border radius of the icon. CSS border-radius values accepted. Note that non-% values (including unitless) get interpreted as 'px'.",
          "type": "string",
          "displayName": "Border Radius",
          "help": "icon.borderRadius"
        },
        "borderWidth": {
          "description": "The border width in pixels.",
          "type": "number",
          "displayName": "Border Width",
          "help": "icon.borderWidth"
        },
        "color": {
          "description": "The fill color of the icon.",
          "type": "string",
          "displayName": "Color",
          "help": "icon.color"
        },
        "height": {
          "description": "The height of the icon.",
          "type": "number",
          "displayName": "Height",
          "help": "icon.height"
        },
        "opacity": {
          "description": "The opacity of the icon.",
          "type": "number",
          "displayName": "Opacity",
          "help": "icon.opacity"
        },
        "pattern": {
          "description": "The fill pattern of the icon.",
          "type": "string",
          "displayName": "Pattern",
          "help": "icon.pattern",
          "enumValues": [
            "largeChecker",
            "largeCrosshatch",
            "largeDiagonalLeft",
            "largeDiagonalRight",
            "largeDiamond",
            "largeTriangle",
            "mallChecker",
            "none",
            "smallCrosshatch",
            "smallDiagonalLeft",
            "smallDiagonalRight",
            "smallDiamond",
            "smallTriangle"
          ],
          "propertyEditorValues": {
            "largeChecker": {
              "displayName": "Large Checker"
            },
            "largeCrosshatch": {
              "displayName": "Large Crosshatch"
            },
            "largeDiagonalLeft": {
              "displayName": "Large Diagonal Left"
            },
            "largeDiagonalRight": {
              "displayName": "Large Diagonal Right"
            },
            "largeDiamond": {
              "displayName": "Large Diamond"
            },
            "largeTriangle": {
              "displayName": "Large Triangle"
            },
            "mallChecker": {
              "displayName": "Mall Checker"
            },
            "none": {
              "displayName": "None"
            },
            "smallCrosshatch": {
              "displayName": "Small Crosshatch"
            },
            "smallDiagonalLeft": {
              "displayName": "Small Diagonal Left"
            },
            "smallDiagonalRight": {
              "displayName": "Small Diagonal Right"
            },
            "smallDiamond": {
              "displayName": "Small Diamond"
            },
            "smallTriangle": {
              "displayName": "Small Triangle"
            }
          }
        },
        "shape": {
          "description": "The shape of the icon. Can take the name of a built-in shape or the svg path commands for a custom shape.",
          "type": "\"circle\"|\"diamond\"|\"ellipse\"|\"human\"|\"plus\"|\"rectangle\"|\"square\"|\"star\"|\"triangleDown\"|\"triangleUp\"|string",
          "displayName": "Shape",
          "help": "icon.shape"
        },
        "source": {
          "description": "The URI of the node image.",
          "type": "string",
          "displayName": "Source",
          "help": "icon.source"
        },
        "sourceHover": {
          "description": "The optional URI of the node hover image. If not defined, the source image will be used.",
          "type": "string",
          "displayName": "Source Hover",
          "help": "icon.sourceHover"
        },
        "sourceHoverSelected": {
          "description": "The optional URI of the selected image on hover. If not defined, the sourceSelected image will be used. If the sourceSelected image is not defined, the source image will be used.",
          "type": "string",
          "displayName": "Source Hover Selected",
          "help": "icon.sourceHoverSelected"
        },
        "sourceSelected": {
          "description": "The optional URI of the selected image. If not defined, the source image will be used.",
          "type": "string",
          "displayName": "Source Selected",
          "help": "icon.sourceSelected"
        },
        "svgClassName": {
          "description": "The CSS style class defining the style of the icon. The style class and style object will be applied directly on the icon and override any other styling specified through the properties.",
          "type": "string",
          "displayName": "Svg Class Name",
          "help": "icon.svgClassName"
        },
        "svgStyle": {
          "description": "The CSS style object defining the style of the icon. The style class and style object will be applied directly on the icon and override any other styling specified through the properties.",
          "type": "object",
          "displayName": "Svg Style",
          "help": "icon.svgStyle"
        },
        "width": {
          "description": "The width of the icon.",
          "type": "number",
          "displayName": "Width",
          "help": "icon.width"
        }
      }
    },
    "label": {
      "description": "Text used for the node label.",
      "type": "string",
      "displayName": "Label",
      "value": "",
      "help": "label"
    },
    "labelStyle": {
      "description": "The CSS style object defining the style of the diagram node label. The default values come from the CSS classes and varies based on theme.",
      "type": "object|null",
      "displayName": "Label Style",
      "help": "labelStyle"
    },
    "overview": {
      "description": "Specifies overview node shape.",
      "type": "object",
      "displayName": "Overview",
      "value": {},
      "help": "overview",
      "properties": {
        "icon": {
          "description": "Specifies overview node shape.",
          "type": "object",
          "displayName": "Icon",
          "help": "overview.icon",
          "properties": {
            "shape": {
              "description": "The shape of the icon in the overview window. Can take one of the following values for the shape name or the svg path commands for a custom shape. The default value is always \"inherit\", but that means different things for custom nodes and default nodes. When \"inherit\" value is specified for a default node, the shape is determined from the node in the diagram. When \"inherit\" value is specified for a custom node, \"rectangle\" shape will be used. This property doesn't apply at all to containers (custom or default).",
              "type": "string",
              "displayName": "Shape",
              "help": "overview.icon.shape"
            },
            "svgClassName": {
              "description": "The CSS style class defining the style of the node icon in the overview.",
              "type": "string",
              "displayName": "Svg Class Name",
              "help": "overview.icon.svgClassName"
            },
            "svgStyle": {
              "description": "The CSS style object defining the style of the node icon in the overview.",
              "type": "object",
              "displayName": "Svg Style",
              "help": "overview.icon.svgStyle"
            }
          }
        }
      }
    },
    "selectable": {
      "description": "Specifies whether or not the node will be selectable.",
      "type": "string",
      "displayName": "Selectable",
      "value": "auto",
      "help": "selectable",
      "enumValues": [
        "auto",
        "off"
      ],
      "propertyEditorValues": {
        "auto": {
          "displayName": "Auto"
        },
        "off": {
          "displayName": "Off"
        }
      }
    },
    "shortDesc": {
      "description": "The text that displays in the node's tooltip.",
      "type": "string",
      "displayName": "Short Desc",
      "value": "",
      "help": "shortDesc"
    },
    "showDisclosure": {
      "description": "Determines when to display the expand/collapse button.",
      "type": "string",
      "displayName": "Show Disclosure",
      "value": "on",
      "help": "showDisclosure",
      "enumValues": [
        "off",
        "on"
      ],
      "propertyEditorValues": {
        "off": {
          "displayName": "Off"
        },
        "on": {
          "displayName": "On"
        }
      }
    }
  }
}